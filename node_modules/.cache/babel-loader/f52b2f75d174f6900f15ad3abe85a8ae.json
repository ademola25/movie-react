{"ast":null,"code":"import _defineProperty from \"/Users/mac/Desktop/movie/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mac/Desktop/movie/src/components/Movie/Movie.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n\n    this.fetchItems = endpoint => {\n      // ES6 destructuring the props\n      const movieId = this.props.match.params.movieId;\n      fetch(endpoint).then(result => result.json()).then(result => {\n        if (result.status_code) {\n          // If we don't find any movie\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movie: result\n          }, () => {\n            // ... then fetch actors in the setState callback function\n            let endpoint = \"\".concat(API_URL, \"movie/\").concat(movieId, \"/credits?api_key=\").concat(API_KEY);\n            fetch(endpoint).then(result => result.json()).then(result => {\n              const directors = result.crew.filter(member => member.job === \"Director\");\n              this.setState({\n                actors: result.cast,\n                directors,\n                loading: false\n              }, () => {\n                localStorage.setItem(\"\".concat(movieId), JSON.stringify(this.state));\n              });\n            });\n          });\n        }\n      }).catch(error => console.error('Error:', error));\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"\".concat(this.props.match.params.movieId))) {\n      const state = JSON.parse(localStorage.getItem(\"\".concat(this.props.match.params.movieId)));\n      this.setState(_objectSpread({}, state));\n    } else {\n      this.setState({\n        loading: true\n      }); //first fetch the movie ..\n\n      const endpoint = \"\".concat(API_URL, \"movie/\").concat(this.props.match.params.movieId, \"?api_key=\").concat(API_KEY, \"&langyage=en-US\");\n      this.fetchItems(endpoint);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.movie ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Navigator, {\n      movie: this.props.location.movieName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(MovieInfo, {\n      movie: this.state.movie,\n      directors: this.state.directors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(MovieInfoBar, {\n      time: this.state.movie.runtime,\n      budget: this.state.movie.budget,\n      revenue: this.state.movie.revenue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })) : null, this.state.actors ? React.createElement(\"div\", {\n      className: \"rmdb-movie-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(FourColGrid, {\n      header: 'Actors',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.actors.map((element, i) => {\n      return React.createElement(Actor, {\n        key: i,\n        actor: element,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      });\n    }))) : null, !this.state.actors && !this.state.loading ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"No Movie Found\") : null, this.state.loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["/Users/mac/Desktop/movie/src/components/Movie/Movie.js"],"names":["React","Component","API_URL","API_KEY","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","state","actors","directors","loading","fetchItems","endpoint","movieId","props","match","params","fetch","then","result","json","status_code","setState","movie","crew","filter","member","job","cast","localStorage","setItem","JSON","stringify","catch","error","console","componentDidMount","getItem","parse","render","location","movieName","runtime","budget","revenue","map","element","i"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n    state = {\n        Movie: null,\n        actors: null,\n        directors: [],\n        loading: false\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\n            const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\n            this.setState({ ...state });\n        } else  {\n        this.setState({ loading: true })\n        //first fetch the movie ..\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&langyage=en-US`;\n        this.fetchItems(endpoint);\n\n        }\n    }\n\n    fetchItems = (endpoint) => {\n        // ES6 destructuring the props\n        const { movieId } = this.props.match.params;\n    \n        fetch(endpoint)\n        .then(result => result.json())\n        .then(result => {\n    \n          if (result.status_code) {\n            // If we don't find any movie\n            this.setState({ loading: false });\n          } else {\n            this.setState({ movie: result }, () => {\n              // ... then fetch actors in the setState callback function\n              let endpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n              fetch(endpoint)\n              .then(result => result.json())\n              .then(result => {\n    \n                const directors = result.crew.filter( (member) => member.job === \"Director\");\n    \n                this.setState({\n                  actors: result.cast,\n                  directors,\n                  loading: false\n                }, () => {\n                  localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\n                })\n              })\n            })\n          }\n        })\n        .catch(error => console.error('Error:', error))\n      }\n    \n        \n        render() {\n          return (\n             <div className=\"rmdb-movie\">\n                {this.state.movie ?\n                    <div>\n                        <Navigator movie={this.props.location.movieName}/>\n                        <MovieInfo movie={this.state.movie} directors={this.state.directors} />\n                        <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue}/>\n                    </div>\n                : null }\n                {this.state.actors ?\n                    <div className=\"rmdb-movie-grid\">\n                        <FourColGrid header={'Actors'}>\n                            {this.state.actors.map((element,i) => {\n                            return <Actor key={i} actor={element} />\n                        })}\n                        </FourColGrid>\n                    </div>\n                : null }\n                {!this.state.actors && !this.state.loading ? <h1>No Movie Found</h1> : null}\n                {this.state.loading ? <Spinner /> :null}\n            </div> \n        )       \n    }\n}\n\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}