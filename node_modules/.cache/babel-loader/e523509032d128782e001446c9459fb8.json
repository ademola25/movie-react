{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/movie/src/components/Movie/Movie.js\";\nimport React, { Component } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n\n    this.fetchItems = () => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        if (result.status_code) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movie: result\n          }, () => {\n            //  then fetch across in the setstate callback function\n            const endpoint = \"\".concat(API_URL, \"movie/\").concat(this.props.match.params.movieId, \"/credits?api_key=\").concat(API_KEY, \"&langyage=en\");\n            fetch(endpoint).then(result => result.json()).then(result => {\n              const directors = result.crew.filter(member => member.job === \"Director\");\n              this.setState({\n                actors: result.cast,\n                directors,\n                loading: false\n              });\n            });\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); //first fetch the movie ..\n\n    const endpoint = \"\".concat(API_URL, \"movie/\").concat(this.props.match.params.movieId, \"?api_key=\").concat(API_KEY, \"&langyage=en\");\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(MovieInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(MovieInfoBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["/Users/mac/Desktop/movie/src/components/Movie/Movie.js"],"names":["React","Component","API_URL","API_KEY","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","state","actors","directors","loading","fetchItems","fetch","endpoint","then","result","json","status_code","setState","movie","props","match","params","movieId","crew","filter","member","job","cast","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BU,KAD0B,GAClB;AACJD,MAAAA,KAAK,EAAE,IADH;AAEJE,MAAAA,MAAM,EAAE,IAFJ;AAGJC,MAAAA,SAAS,EAAE,EAHP;AAIJC,MAAAA,OAAO,EAAE;AAJL,KADkB;;AAAA,SAgBtBC,UAhBsB,GAgBT,MAAM;AACfC,MAAAA,KAAK,CAACC,QAAD,CAAL,CACCC,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADhB,EAECF,IAFD,CAEMC,MAAM,IAAI;AAEZ,YAAGA,MAAM,CAACE,WAAV,EAAsB;AAClB,eAAKC,QAAL,CAAc;AAAER,YAAAA,OAAO,EAAE;AAAX,WAAd;AACH,SAFD,MAEM;AACF,eAAKQ,QAAL,CAAc;AAAEC,YAAAA,KAAK,EAAEJ;AAAT,WAAd,EAAgC,MAAK;AACjC;AACA,kBAAMF,QAAQ,aAAMf,OAAN,mBAAsB,KAAKsB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAA9C,8BAAyExB,OAAzE,iBAAd;AACAa,YAAAA,KAAK,CAACC,QAAD,CAAL,CACCC,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADhB,EAECF,IAFD,CAEMC,MAAM,IAAI;AACZ,oBAAMN,SAAS,GAAGM,MAAM,CAACS,IAAP,CAAYC,MAAZ,CAAoBC,MAAD,IAAYA,MAAM,CAACC,GAAP,KAAc,UAA7C,CAAlB;AAEA,mBAAKT,QAAL,CAAc;AACVV,gBAAAA,MAAM,EAAEO,MAAM,CAACa,IADL;AAEVnB,gBAAAA,SAFU;AAGVC,gBAAAA,OAAO,EAAE;AAHC,eAAd;AAKH,aAVD;AAWH,WAdD;AAeH;AACJ,OAvBD;AAwBH,KAzCqB;AAAA;;AAQ1BmB,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,QAAL,CAAc;AAAER,MAAAA,OAAO,EAAE;AAAX,KAAd,EADgB,CAEhB;;AACA,UAAMG,QAAQ,aAAMf,OAAN,mBAAsB,KAAKsB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAA9C,sBAAiExB,OAAjE,iBAAd;AACA,SAAKY,UAAL,CAAgBE,QAAhB;AAEH;;AAoCDiB,EAAAA,MAAM,GAAG;AACL,WAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAFJ;AAYH;;AA/DyB;;AAkE9B,eAAexB,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n    state = {\n        Movie: null,\n        actors: null,\n        directors: [],\n        loading: false\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true })\n        //first fetch the movie ..\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&langyage=en`\n        this.fetchItems(endpoint);\n\n    }\n\n        fetchItems = () => {\n            fetch(endpoint)\n            .then(result => result.json())\n            .then(result => {\n\n                if(result.status_code){\n                    this.setState({ loading: false });\n                } else{\n                    this.setState({ movie: result}, () =>{\n                        //  then fetch across in the setstate callback function\n                        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}&langyage=en`\n                        fetch(endpoint)\n                        .then(result => result.json())\n                        .then(result => {\n                            const directors = result.crew.filter((member) => member.job ===\"Director\");\n\n                            this.setState({\n                                actors: result.cast,\n                                directors,\n                                loading: false\n                            })\n                        })\n                    })\n                }\n            })\n        }\n\n\n\n\n\n\n\n\n    render() {\n        return(\n\n            <div className=\"rmdb-movie\">\n                <Navigation />\n                <MovieInfo />\n                <MovieInfoBar />\n                \n                <Spinner />\n\n            </div>\n        )\n        \n    }\n}\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}