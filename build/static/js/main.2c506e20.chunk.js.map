{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","image","title","text","style","background","SearchBar","state","value","timeout","doSearch","event","callback","props","setState","target","clearTimeout","setTimeout","this","name","size","type","placeholder","onChange","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","clickable","pathname","movieId","movieName","movieNAme","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","sessionStorage","setItem","JSON","stringify","catch","error","console","getItem","parse","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","match","params","status_code","crew","filter","member","job","cast","localStorage","location","runtime","NotFound","App","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c506e20.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => (\n  <div className=\"rmdb-header\">\n    <div className=\"rmdb-header-content\">\n      <Link to=\"/\">\n        <img className=\"rmdb-logo\" src=\"/images/reactMovie_logo.png\" alt=\"rmdb-logo\" />\n      </Link>\n      <img className=\"rmdb-tmdb-logo\" src=\"/images/tmdb_logo.png\" alt=\"tmdb-logo\" />\n    </div>\n  </div>\n)\n\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './HeroImage.css';\n\nconst HeroImage = ({ image, title, text }) => (\n  <div className=\"rmdb-heroimage\"\n    style={{\n      background:\n        `linear-gradient(to bottom, rgba(0,0,0,0)\n        39%,rgba(0,0,0,0)\n        41%,rgba(0,0,0,0.65)\n        100%),\n        url('${image}'), #1c1c1c`\n    }}\n  >\n    <div className=\"rmdb-heroimage-content\">\n      <div className=\"rmdb-heroimage-text\">\n        <h1>{title}</h1>\n        <p>{text}</p>\n      </div>\n    </div>\n  </div>\n)\n\nHeroImage.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.string\n}\n\nexport default HeroImage;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n  state = {\n    value: ''\n  }\n  // Must have this here so we can reset it\n  timeout = null;\n\n  doSearch = (event) => {\n    // ES6 Destructuring prop\n    const { callback } = this.props;\n\n    this.setState({ value: event.target.value })\n    clearTimeout(this.timeout);\n    // Set a timeout to wait for the user to stop writing\n    // So we don´t have to make unnessesary calls\n    this.timeout = setTimeout( () => {\n      callback(this.state.value);\n    }, 500);\n  }\n\n  render () {\n    // ES6 Destructuring state\n    const { value } = this.state;\n\n    return (\n      <div className=\"rmdb-searchbar\">\n        <div className=\"rmdb-searchbar-content\">\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\n          <input\n            type=\"text\"\n            className=\"rmdb-searchbar-input\"\n            placeholder=\"Search\"\n            onChange={this.doSearch}\n            value={value}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nSearchBar.propTypes = {\n  callback: PropTypes.func\n}\n\nexport default SearchBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FourColGrid.css';\n\n\nconst FourColGrid = (props) => {\n\n    const renderElements = () =>{\n        const gridElements = props.children.map ((element, i) => {\n            return(\n                <div key={i} className=\"rmdb-grid-element\">\n                    {element}\n                </div>\n            )\n        })\n        return gridElements;\n    }\n    return (\n        <div className=\"rmdb-grid\">\n        {props.header && !props.loading ? <h1>{props.header}</h1> : null}\n        <div className=\"rmdb-grid-content\">\n            {renderElements()}\n        </div>\n        </div>\n    )\n}\n\nFourColGrid.propTypes ={\n    header: PropTypes.string,\n    loading: PropTypes.bool\n}\nexport default FourColGrid;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './MovieThumb.css';\n\nconst MovieThumb = (props) => {\n    return(\n        <div className=\"rmdb-moviethumb\">\n        {props.clickable ? \n        <Link to={{pathname: `/${props.movieId}`, movieName: `${props.movieNAme}`}}>\n            <img src={props.image} alt=\"moviethumb\" />\n         </Link>\n            :\n            <img src={props.image} alt=\"moviethumb\" />\n        }\n        </div>\n    )\n}\n\nMovieThumb.propTypes ={\n    image: PropTypes.string,\n    movieId: PropTypes.number,\n    movieNAme: PropTypes.string\n}\nexport default MovieThumb;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = ({ text, onClick }) => (\n  <div className=\"rmdb-loadmorebtn\" onClick={onClick}>\n    <p>{text}</p>\n  </div>\n)\n\nLoadMoreBtn.propTypes = {\n  text: PropTypes.string,\n  onClick: PropTypes.func\n}\n\nexport default LoadMoreBtn;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = ()=> {\n    return(\n        <div className=\"loader\"></div>\n    )\n}\n\nexport default Spinner;","import React, { Component } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/SearchBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: ''\n  }\n\n  componentDidMount() {\n    if (sessionStorage.getItem('HomeState')) {\n      let state = JSON.parse(sessionStorage.getItem('HomeState'))\n      this.setState({ ...state })\n    } else {\n      this.setState({ loading: true })\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  searchItems = (searchTerm) => {\n    let endpoint = '';\n    this.setState({\n      movies: [],\n      loading: true,\n      searchTerm\n    })\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n    this.fetchItems(endpoint);\n  }\n\n  loadMoreItems = () => {\n    // ES6 Destructuring the state\n    const { searchTerm, currentPage } = this.state;\n\n    let endpoint = '';\n    this.setState({ loading: true })\n\n    if (searchTerm === '') {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage + 1}`;\n    }\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = (endpoint) => {\n    // ES6 Destructuring the state\n    const { movies, heroImage, searchTerm } = this.state;\n\n    fetch(endpoint)\n    .then(result => result.json())\n    .then(result => {\n      this.setState({\n        movies: [...movies, ...result.results],\n        heroImage: heroImage || result.results[0],\n        loading: false,\n        currentPage: result.page,\n        totalPages: result.total_pages\n      }, () => {\n        // Remember state for the next mount if we´re not in a search view\n        if (searchTerm === \"\") {\n          sessionStorage.setItem('HomeState', JSON.stringify(this.state));\n        }\n      })\n    })\n    .catch(error => console.error('Error:', error))\n  }\n\n  render() {\n    // ES6 Destructuring the state\n    const { movies, heroImage, loading, currentPage, totalPages, searchTerm } = this.state;\n\n    return (\n      <div className=\"rmdb-home\">\n        {heroImage ?\n          <div>\n            <HeroImage\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n              title={heroImage.original_title}\n              text={heroImage.overview}\n            />\n            <SearchBar callback={this.searchItems}/>\n          </div> : null }\n          <div className=\"rmdb-home-grid\">\n            <FourColGrid\n              header={searchTerm ? 'Search Result' : 'Popular Movies'}\n              loading={loading}\n            >\n              {movies.map( (element, i) => (\n                <MovieThumb\n                  key={i}\n                  clickable={true}\n                  image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\n                  movieId={element.id}\n                  movieName={element.original_title}\n                />\n              ))}\n            </FourColGrid>\n            {loading ? <Spinner /> : null}\n            {(currentPage < totalPages && !loading) ?\n              <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\n              : null\n            }\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Navigation.css';\n\nconst Navigation = ({ movie }) => (\n  <div className=\"rmdb-navigation\">\n    <div className=\"rmdb-navigation-content\">\n      <Link to=\"/\">\n        <p>Home</p>\n      </Link>\n      <p>/</p>\n      <p>{movie}</p>\n    </div>\n  </div>\n)\n\nNavigation.propTypes = {\n  movie: PropTypes.string\n}\n\nexport default Navigation;","import React from 'react';\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\nimport FontAwesome from 'react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo = (props) => {\n    return (\n        <div className=\"rmdb-movieinfo\"\n        style={{\n            background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000'\n        }}\n        >\n        <div className=\"rmdb-movieinfo-content\">\n        <div className=\"rmdb-movieinfo-thumb\">\n        <MovieThumb\n        image= {props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_iamge.jpg'}\n        clickable={false}\n        />\n        </div>\n        <div className=\"rmdb-movieinfo-text\">\n        <h1>{props.movie.title}</h1>\n        <h3>PLOT</h3>\n        <p>{props.movie.overview}</p>\n        <h3>IMDB RATING</h3>\n        <div className=\"rmdb-rating\">\n        <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\n        <p className=\"rmdb-score\"> {props.movie.vote_average}</p>\n        \n        </div>\n        {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n        {props.directors.map((element, i) => {\n            return <p key={i} className=\"rmdb-director\">{element.name}</p>\n        })}\n        </div>\n        <FontAwesome className=\"fa-film\" name=\"title\" size=\"5x\" />\n        </div>    \n        </div>\n    )\n}\n\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\nimport { calcTime, convertMoney } from '../../../helpers.js';\nimport FontAwesome from 'react-fontawesome';\nimport './MovieInfoBar.css';\n\nconst MovieInfoBar= (props) => {\n    return (\n        <div className=\"rmdb-movieinfobar\">\n            <div className=\"rmdb-movieinfobar-content\">    \n                <div className=\"rmdb-movieinfobar-content-col\">    \n                    <FontAwesome className=\"fa-time\" name =\"clock-o\" size=\"2x\" />\n                    <span className=\"rmdb-movieinfobar-info\">Running Time:{calcTime(props.time)} </span>\n                 </div>\n                 <div className=\"rmdb-movieinfobar-content-col\">    \n                    <FontAwesome className=\"fa-budget\" name =\"money\" size=\"2x\" />\n                    <span className=\"rmdb-movieinfobar-info\">Budget:{convertMoney(props.budget)} </span>\n                </div>\n                <div className=\"rmdb-movieinfobar-content-col\">    \n                    <FontAwesome className=\"fa-revenue\" name =\"ticket\" size=\"2x\" />\n                    <span className=\"rmdb-movieinfobar-info\">Revenue:{convertMoney(props.revenue)} </span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieInfoBar;","import React from 'react';\nimport { IMAGE_BASE_URL } from '../../../config';\n\nimport './Actor.css';\n\nconst Actor = (props) => {\n    const POSTER_SIZE = \"w154\";\n\n    return (\n        <div className=\"rmdb-actor\">\n        <img \n            src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\n            alt=\"actorhumb\" />\n            <span className =\"rmdb-actor-name\">{props.actor.name}</span>\n            <span className =\"rmdb-actor-character\">{props.actor.character}</span>   \n        </div>\n    )\n}\n\nexport default Actor;","import React, { Component } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid.js';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  }\n\n  componentDidMount() {\n    // ES6 destructuring the props\n    const { movieId } = this.props.match.params;\n\n    if (localStorage.getItem(`${movieId}`)) {\n      let state = JSON.parse(localStorage.getItem(`${movieId}`))\n      this.setState({ ...state })\n    } else {\n      this.setState({ loading: true })\n      // First fetch the movie ...\n      let endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  fetchItems = (endpoint) => {\n    // ES6 destructuring the props\n    const { movieId } = this.props.match.params;\n\n    fetch(endpoint)\n    .then(result => result.json())\n    .then(result => {\n\n      if (result.status_code) {\n        // If we don't find any movie\n        this.setState({ loading: false });\n      } else {\n        this.setState({ movie: result }, () => {\n          // ... then fetch actors in the setState callback function\n          let endpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n          fetch(endpoint)\n          .then(result => result.json())\n          .then(result => {\n\n            const directors = result.crew.filter( (member) => member.job === \"Director\");\n\n            this.setState({\n              actors: result.cast,\n              directors,\n              loading: false\n            }, () => {\n              localStorage.setItem(`${movieId}`, JSON.stringify(this.state));\n            })\n          })\n        })\n      }\n    })\n    .catch(error => console.error('Error:', error))\n  }\n\n  render() {\n    // ES6 Destructuring the props and state\n    const { movieName } = this.props.location;\n    const { movie, directors, actors, loading } = this.state;\n\n    return (\n      <div className=\"rmdb-movie\">\n        {movie ?\n        <div>\n          <Navigation movie={movieName} />\n          <MovieInfo movie={movie} directors={directors} />\n          <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue} />\n        </div>\n        : null }\n        {actors ?\n        <div className=\"rmdb-movie-grid\">\n          <FourColGrid header={'Actors'}>\n            {actors.map( (element, i) => (\n              <Actor key={i} actor={element} />\n            ))}\n          </FourColGrid>\n        </div>\n        : null }\n        {!actors && !loading ? <h1>No movie found</h1> : null }\n        {loading ? <Spinner /> : null}\n      </div>\n    )\n  }\n}\n\nexport default Movie;","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <div>\n                <h1> Whooooooops .This page doesn't exist</h1>\n        </div>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Header from '../elements/Header/Header';\nimport Home from '../Home/Home';\nimport Movie from '../Movie/Movie';\nimport NotFound from '../elements/NotFound/NotFound';\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n        <React.Fragment>\n        < Header />\n        <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/:movieId\" component={Movie} exact/>\n            <Route component={NotFound} />\n        </Switch>\n\n        </React.Fragment>\n        </BrowserRouter>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}